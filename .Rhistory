geom_abline(slope = 0, intercept = 0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_abline(slope = 0, intercept = -0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
load('D:/SIRV/EventPointerPaper_R/SUPPA/tablaContraste_C.RData')
load('D:/SIRV/EventPointerPaper_R/SUPPA/tablaContraste_I.RData')
load('D:/SIRV/EventPointerPaper_R/SUPPA/tablaContraste_O.RData')
df <- data.frame(
x = as.numeric(c(tablaContraste_C[,1] ,tablaContraste_I[,c(1)],tablaContraste_O[,c(1)])),   # Primera columna (valores de x)
y = as.numeric(c(tablaContraste_C[,c(2)],tablaContraste_I[,c(2)],tablaContraste_O[,c(2)])),   # Segunda columna (valores de y)
gtf = as.factor(c(rep("original",nrow(tablaContraste_C)),rep("incomplete",nrow(tablaContraste_I)),rep("overload",nrow(tablaContraste_O))))  # Tercera columna (categoría)
)
df$ID <- c(rownames(tablaContraste_C),rownames(tablaContraste_I),rownames(tablaContraste_O))
df <- df[sample(nrow(df),nrow(df),replace = F),]
# df[which(sign(df$x)!=sign(df$y)),]$y <- -df[which(sign(df$x)!=sign(df$y)),]$y
df[which(sign(df$x)!=0 &(sign(df$x)!=sign(df$y))),]$y <- -df[which(sign(df$x)!=0 &(sign(df$x)!=sign(df$y))),]$y
# intersect.Vector(which(sign(df$x)!=sign(df$y)),which(sign(df$x)!=sign(df$y)))
color_palette <- c("original" = "#009E73", "incomplete" = "#E69F00", "overload" = "#0072B2")
text_df <- data.frame(
x = c(-0.8, -0.8, -0.8),
y = c(0.8, 0.7, 0.6),
label = c(paste("Nº events (original):", length(unique(tablaContraste_C$ID))),
paste("Nº events (incomplete):", length(unique(tablaContraste_I$ID))),
paste("Nº events (overload):", length(unique(tablaContraste_O$ID))))
)
p_SUPPA_DPSI <- ggplot(df,aes(x = x, y = y, color = gtf))+
geom_jitter(aes(fill=gtf),pch=21,color="black", size=3.5, alpha=1,height = 0.015,width = 0.015) +
geom_smooth(aes(group=gtf,color = gtf, fill=gtf),span=1, alpha=0.2) +
labs(title = "", x = "SIRV ΔΨ", y = "SUPPA ΔΨ", color = "gtf annotation",fill = "gtf annotation") +
geom_abline(slope = 1, intercept = 0, color = "black") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
stat_cor(output.type = "text",cor.coef.name = c("rho"),label.x.npc = 0.3,label.y.npc ="bottom" ,method="pearson",
size = 4.5, fontface = "bold",aes(label = paste0("ρ = ", ..r.., ", p-value = ", ..p..)))+
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
df$error <- df$y-df$x
meanError_C <- sqrt(sum(df[which(df$gtf=="original"),]$error^2)/nrow(df[which(df$gtf=="original"),]))
meanError_I <- sqrt(sum(df[which(df$gtf=="incomplete"),]$error^2)/nrow(df[which(df$gtf=="incomplete"),]))
meanError_O <- sqrt(sum(df[which(df$gtf=="overload"),]$error^2)/nrow(df[which(df$gtf=="overload"),]))
text_df <- data.frame(
x = c(-0.5, -0.5, -0.5),
y = c(0.8, 0.7, 0.6),
label = c(paste("Mean Error (C):", round(meanError_C, 3)),
paste("Mean Error (I):", round(meanError_I, 3)),
paste("Mean Error (O):", round(meanError_O, 3)))
)
p_SUPPA_DPSI_error <- ggplot(df,aes(x = x, y = error, color = gtf))+
geom_jitter(aes(fill=gtf),pch=21,color="black", size=3.5, alpha=1,height = 0.001,width = 0.001) +
geom_smooth(aes(group=gtf,color = gtf, fill=gtf),span=1, alpha=0.2) +
labs(title = "", x = "SIRV ΔΨ", y = "Estimation Error", color = "gtf annotation",fill = "gtf annotation") +
geom_abline(slope = 0, intercept = 0, color = "black") +
geom_abline(slope = 0, intercept = 0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_abline(slope = 0, intercept = -0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
# p_EPBAM_DPSI <- p_EPBAM_DPSI + theme(legend.position = "none")
p_EPST_DPSI <- p_EPST_DPSI + theme(legend.position = "none")
p_rMATS_DPSI <- p_rMATS_DPSI + theme(legend.position = "none")
p_EPBAM_DPSI_error <- p_EPBAM_DPSI_error + theme(legend.position = "none")
p_EPST_DPSI_error <- p_EPST_DPSI_error + theme(legend.position = "none")
p_rMATS_DPSI_error <- p_rMATS_DPSI_error + theme(legend.position = "none")
p_MAJIQ_DPSI <- p_MAJIQ_DPSI + theme(legend.position = "none")
p_MAJIQ_DPSI_error <- p_MAJIQ_DPSI_error + theme(legend.position = "none")
p_MAJIQ_DPSI <- p_MAJIQ_DPSI + theme(legend.position = "none")
p_MAJIQ_DPSI_error <- p_MAJIQ_DPSI_error + theme(legend.position = "none")
p_SUPPA_DPSI <- p_SUPPA_DPSI + theme(legend.position = "none")
p_SUPPA_DPSI_error <- p_SUPPA_DPSI_error + theme(legend.position = "none")
# empty_plot <- ggplot() + theme_void()
plot_grid(p_EPBAM_DPSI, p_EPST_DPSI,p_SUPPA_DPSI, p_rMATS_DPSI,p_MAJIQ_DPSI, p_EPBAM_DPSI_error, p_EPST_DPSI_error,p_SUPPA_DPSI_error, p_rMATS_DPSI_error,p_MAJIQ_DPSI_error, ncol = 5, align = 'hv')
# empty_plot <- ggplot() + theme_void()
plot_grid(p_EPBAM_DPSI, p_EPST_DPSI,p_SUPPA_DPSI, p_rMATS_DPSI,p_MAJIQ_DPSI, p_EPBAM_DPSI_error, p_EPST_DPSI_error,p_SUPPA_DPSI_error, p_rMATS_DPSI_error,p_MAJIQ_DPSI_error, ncol = 5, align = 'hv')+legend
legend <- get_legend(p_EPBAM_DPSI)
# empty_plot <- ggplot() + theme_void()
plot_grid(p_EPBAM_DPSI, p_EPST_DPSI,p_SUPPA_DPSI, p_rMATS_DPSI,p_MAJIQ_DPSI, p_EPBAM_DPSI_error, p_EPST_DPSI_error,p_SUPPA_DPSI_error, p_rMATS_DPSI_error,p_MAJIQ_DPSI_error, ncol = 5, align = 'hv')+legend
tablaContraste_O <- tablaContraste_O[which(tablaContraste_O$pvalue<0.05),]
load('D:/SIRV/EventPointerPaper_R/SUPPA/tablaContraste_C.RData')
load('D:/SIRV/EventPointerPaper_R/SUPPA/tablaContraste_I.RData')
load('D:/SIRV/EventPointerPaper_R/SUPPA/tablaContraste_O.RData')
tablaContraste_C <- tablaContraste_C[which(tablaContraste_C$pvalue<0.05),]
tablaContraste_I <- tablaContraste_I[which(tablaContraste_I$pvalue<0.05),]
tablaContraste_O <- tablaContraste_O[which(tablaContraste_O$pvalue<0.05),]
df <- data.frame(
x = as.numeric(c(tablaContraste_C[,1] ,tablaContraste_I[,c(1)],tablaContraste_O[,c(1)])),   # Primera columna (valores de x)
y = as.numeric(c(tablaContraste_C[,c(2)],tablaContraste_I[,c(2)],tablaContraste_O[,c(2)])),   # Segunda columna (valores de y)
gtf = as.factor(c(rep("original",nrow(tablaContraste_C)),rep("incomplete",nrow(tablaContraste_I)),rep("overload",nrow(tablaContraste_O))))  # Tercera columna (categoría)
)
df$ID <- c(rownames(tablaContraste_C),rownames(tablaContraste_I),rownames(tablaContraste_O))
df <- df[sample(nrow(df),nrow(df),replace = F),]
# df[which(sign(df$x)!=sign(df$y)),]$y <- -df[which(sign(df$x)!=sign(df$y)),]$y
df[which(sign(df$x)!=0 &(sign(df$x)!=sign(df$y))),]$y <- -df[which(sign(df$x)!=0 &(sign(df$x)!=sign(df$y))),]$y
# intersect.Vector(which(sign(df$x)!=sign(df$y)),which(sign(df$x)!=sign(df$y)))
color_palette <- c("original" = "#009E73", "incomplete" = "#E69F00", "overload" = "#0072B2")
text_df <- data.frame(
x = c(-0.8, -0.8, -0.8),
y = c(0.8, 0.7, 0.6),
label = c(paste("Nº events (original):", length(unique(tablaContraste_C$ID))),
paste("Nº events (incomplete):", length(unique(tablaContraste_I$ID))),
paste("Nº events (overload):", length(unique(tablaContraste_O$ID))))
)
p_SUPPA_DPSI <- ggplot(df,aes(x = x, y = y, color = gtf))+
geom_jitter(aes(fill=gtf),pch=21,color="black", size=3.5, alpha=1,height = 0.015,width = 0.015) +
geom_smooth(aes(group=gtf,color = gtf, fill=gtf),span=1, alpha=0.2) +
labs(title = "", x = "SIRV ΔΨ", y = "SUPPA ΔΨ", color = "gtf annotation",fill = "gtf annotation") +
geom_abline(slope = 1, intercept = 0, color = "black") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
stat_cor(output.type = "text",cor.coef.name = c("rho"),label.x.npc = 0.3,label.y.npc ="bottom" ,method="pearson",
size = 4.5, fontface = "bold",aes(label = paste0("ρ = ", ..r.., ", p-value = ", ..p..)))+
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
df$error <- df$y-df$x
meanError_C <- sqrt(sum(df[which(df$gtf=="original"),]$error^2)/nrow(df[which(df$gtf=="original"),]))
meanError_I <- sqrt(sum(df[which(df$gtf=="incomplete"),]$error^2)/nrow(df[which(df$gtf=="incomplete"),]))
meanError_O <- sqrt(sum(df[which(df$gtf=="overload"),]$error^2)/nrow(df[which(df$gtf=="overload"),]))
text_df <- data.frame(
x = c(-0.5, -0.5, -0.5),
y = c(0.8, 0.7, 0.6),
label = c(paste("Mean Error (C):", round(meanError_C, 3)),
paste("Mean Error (I):", round(meanError_I, 3)),
paste("Mean Error (O):", round(meanError_O, 3)))
)
p_SUPPA_DPSI_error <- ggplot(df,aes(x = x, y = error, color = gtf))+
geom_jitter(aes(fill=gtf),pch=21,color="black", size=3.5, alpha=1,height = 0.001,width = 0.001) +
geom_smooth(aes(group=gtf,color = gtf, fill=gtf),span=1, alpha=0.2) +
labs(title = "", x = "SIRV ΔΨ", y = "Estimation Error", color = "gtf annotation",fill = "gtf annotation") +
geom_abline(slope = 0, intercept = 0, color = "black") +
geom_abline(slope = 0, intercept = 0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_abline(slope = 0, intercept = -0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
load('D:/SIRV/EventPointerPaper_R/EventPointerST/tablaContraste_C.RData')
load('D:/SIRV/EventPointerPaper_R/EventPointerST/tablaContraste_I.RData')
load('D:/SIRV/EventPointerPaper_R/EventPointerST/tablaContraste_O.RData')
load('D:/SIRV/EventPointerPaper_R/EventPointerST/tablaContraste_C.RData')
load('D:/SIRV/EventPointerPaper_R/EventPointerST/tablaContraste_I.RData')
load('D:/SIRV/EventPointerPaper_R/EventPointerST/tablaContraste_O.RData')
tablaContraste_C <- tablaContraste_C[which(tablaContraste_C$pvalue<0.05),]
tablaContraste_I <- tablaContraste_I[which(tablaContraste_I$pvalue<0.05),]
tablaContraste_O <- tablaContraste_O[which(tablaContraste_O$pvalue<0.05),]
df <- data.frame(
x = as.numeric(c(tablaContraste_C$deltaPSI_Sirv,tablaContraste_I$deltaPSI_Sirv,tablaContraste_O$deltaPSI_Sirv)),   # Primera columna (valores de x)
y = as.numeric(c(tablaContraste_C$deltaPSI,tablaContraste_I$deltaPSI,tablaContraste_O$deltaPSI)),   # Segunda columna (valores de y)
gtf = as.factor(c(rep("original",nrow(tablaContraste_C)),rep("incomplete",nrow(tablaContraste_I)),rep("overload",nrow(tablaContraste_O))))  # Tercera columna (categoría)
)
df$ID <- c(rownames(tablaContraste_C),rownames(tablaContraste_I),rownames(tablaContraste_O))
df <- df[sample(nrow(df),nrow(df),replace = F),]
df[which(sign(df$x)!=0 &(sign(df$x)!=sign(df$y))),]$y <- -df[which(sign(df$x)!=0 &(sign(df$x)!=sign(df$y))),]$y
color_palette <- c("original" = "#009E73", "incomplete" = "#E69F00", "overload" = "#0072B2")
text_df <- data.frame(
x = c(-0.8, -0.8, -0.8),
y = c(0.8, 0.7, 0.6),
label = c(paste("Nº events (original):", length(unique(tablaContraste_C$X))),
paste("Nº events (incomplete):", length(unique(tablaContraste_I$X))),
paste("Nº events (overload):", length(unique(tablaContraste_O$X))))
)
p_EPST_DPSI <- ggplot(df,aes(x = x, y = y, color = gtf))+
geom_jitter(aes(fill=gtf),pch=21,color="black", size=3.5, alpha=1,height = 0.015,width = 0.015) +
geom_smooth(aes(group=gtf,color = gtf, fill=gtf),span=1, alpha=0.2) +
labs(title = "", x = "SIRV ΔΨ", y = "EventPointer ST ΔΨ", color = "gtf annotation",fill = "gtf annotation") +
geom_abline(slope = 1, intercept = 0, color = "black") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
stat_cor(output.type = "text",cor.coef.name = c("rho"),label.x.npc = 0.3,label.y.npc ="bottom" ,method="pearson",
size = 4.5, fontface = "bold",aes(label = paste0("ρ = ", ..r.., ", p-value = ", ..p..)))+
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
df$error <- df$y-df$x
meanError_C <- sqrt(sum(df[which(df$gtf=="original"),]$error^2)/nrow(df[which(df$gtf=="original"),]))
meanError_I <- sqrt(sum(df[which(df$gtf=="incomplete"),]$error^2)/nrow(df[which(df$gtf=="incomplete"),]))
meanError_O <- sqrt(sum(df[which(df$gtf=="overload"),]$error^2)/nrow(df[which(df$gtf=="overload"),]))
text_df <- data.frame(
x = c(-0.5, -0.5, -0.5),
y = c(0.8, 0.7, 0.6),
label = c(paste("Mean Error (C):", round(meanError_C, 3)),
paste("Mean Error (I):", round(meanError_I, 3)),
paste("Mean Error (O):", round(meanError_O, 3)))
)
p_EPST_DPSI_error <- ggplot(df,aes(x = x, y = error, color = gtf))+
geom_jitter(aes(fill=gtf),pch=21,color="black", size=3.5, alpha=1,height = 0.001,width = 0.001) +
geom_smooth(aes(group=gtf,color = gtf, fill=gtf),span=.8, alpha=0.2) +
labs(title = "", x = "SIRV ΔΨ", y = "Estimation Error", color = "gtf annotation",fill = "gtf annotation") +
geom_abline(slope = 0, intercept = 0, color = "black") +
geom_abline(slope = 0, intercept = 0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_abline(slope = 0, intercept = -0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
load('D:/SIRV/EventPointerPaper_R/EventPointerBAM/tablaContraste_C.RData')
load('D:/SIRV/EventPointerPaper_R/EventPointerBAM/tablaContraste_I.RData')
load('D:/SIRV/EventPointerPaper_R/EventPointerBAM/tablaContraste_O.RData')
load('D:/SIRV/EventPointerPaper_R/EventPointerBAM/tablaContraste_C.RData')
load('D:/SIRV/EventPointerPaper_R/EventPointerBAM/tablaContraste_I.RData')
load('D:/SIRV/EventPointerPaper_R/EventPointerBAM/tablaContraste_O.RData')
tablaContraste_C <- tablaContraste_C[which(tablaContraste_C$pvalue<0.05),]
tablaContraste_I <- tablaContraste_I[which(tablaContraste_I$pvalue<0.05),]
tablaContraste_O <- tablaContraste_O[which(tablaContraste_O$pvalue<0.05),]
df <- data.frame(
x = as.numeric(c(tablaContraste_C$deltaPSI_Sirv,tablaContraste_I$deltaPSI_Sirv,tablaContraste_O$deltaPSI_Sirv)),   # Primera columna (valores de x)
y = as.numeric(c(tablaContraste_C$deltaPSI,tablaContraste_I$deltaPSI,tablaContraste_O$deltaPSI)),   # Segunda columna (valores de y)
gtf = as.factor(c(rep("original",nrow(tablaContraste_C)),rep("incomplete",nrow(tablaContraste_I)),rep("overload",nrow(tablaContraste_O))))  # Tercera columna (categoría)
)
df <- df[sample(nrow(df),nrow(df),replace = F),]
df[which(sign(df$x)!=0 &(sign(df$x)!=sign(df$y))),]$y <- -df[which(sign(df$x)!=0 &(sign(df$x)!=sign(df$y))),]$y
color_palette <- c("original" = "#009E73", "incomplete" = "#E69F00", "overload" = "#0072B2")
text_df <- data.frame(
x = c(-0.8, -0.8, -0.8),
y = c(0.8, 0.7, 0.6),
label = c(paste("Nº events (original):", length(unique(tablaContraste_C$X))),
paste("Nº events (incomplete):", length(unique(tablaContraste_I$X))),
paste("Nº events (overload):", length(unique(tablaContraste_O$X))))
)
p_EPBAM_DPSI <- ggplot(df,aes(x = x, y = y, color = gtf))+
geom_jitter(aes(fill=gtf),pch=21,color="black", size=3.5, alpha=1,height = 0.015,width = 0.015) +
geom_smooth(aes(group=gtf,color = gtf, fill=gtf),span=1, alpha=0.2) +
labs(title = "", x = "SIRV ΔΨ", y = "EventPointer BAM ΔΨ", color = "gtf annotation",fill = "gtf annotation") +
geom_abline(slope = 1, intercept = 0, color = "black") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
stat_cor(output.type = "text",cor.coef.name = c("rho"),label.x.npc = 0.3,label.y.npc ="bottom" ,method="pearson",
size = 4.5, fontface = "bold",aes(label = paste0("ρ = ", ..r.., ", p-value = ", ..p..)))+
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
df$error <- df$y-df$x
meanError_C <- sqrt(sum(df[which(df$gtf=="original"),]$error^2)/nrow(df[which(df$gtf=="original"),]))
meanError_I <- sqrt(sum(df[which(df$gtf=="incomplete"),]$error^2)/nrow(df[which(df$gtf=="incomplete"),]))
meanError_O <- sqrt(sum(df[which(df$gtf=="overload"),]$error^2)/nrow(df[which(df$gtf=="overload"),]))
text_df <- data.frame(
x = c(-0.5, -0.5, -0.5),
y = c(0.8, 0.7, 0.6),
label = c(paste("Mean Error (C):", round(meanError_C, 3)),
paste("Mean Error (I):", round(meanError_I, 3)),
paste("Mean Error (O):", round(meanError_O, 3)))
)
p_EPBAM_DPSI_error <- ggplot(df,aes(x = x, y = error, color = gtf))+
geom_jitter(aes(fill=gtf),pch=21,color="black", size=3.5, alpha=1,height = 0.01,width = 0.01) +
geom_smooth(aes(group=gtf,color = gtf, fill=gtf),span=.8, alpha=0.2) +
labs(title = "", x = "SIRV ΔΨ", y = "Estimation Error", color = "gtf annotation",fill = "gtf annotation") +
geom_abline(slope = 0, intercept = 0, color = "black") +
geom_abline(slope = 0, intercept = 0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_abline(slope = 0, intercept = -0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
load('D:/SIRV/EventPointerPaper_R/rMATS/tablaContraste_C.RData')
load('D:/SIRV/EventPointerPaper_R/rMATS/tablaContraste_I.RData')
load('D:/SIRV/EventPointerPaper_R/rMATS/tablaContraste_O.RData')
load('D:/SIRV/EventPointerPaper_R/rMATS/tablaContraste_C.RData')
load('D:/SIRV/EventPointerPaper_R/rMATS/tablaContraste_I.RData')
load('D:/SIRV/EventPointerPaper_R/rMATS/tablaContraste_O.RData')
tablaContraste_C <- tablaContraste_C[which(tablaContraste_C$PValue<0.05),]
tablaContraste_I <- tablaContraste_I[which(tablaContraste_I$PValue<0.05),]
tablaContraste_O <- tablaContraste_O[which(tablaContraste_O$PValue<0.05),]
df <- data.frame(
x = as.numeric(c(tablaContraste_C$DeltaPSI,tablaContraste_I$DeltaPSI,tablaContraste_O$DeltaPSI)),   # Primera columna (valores de x)
y = as.numeric(c(tablaContraste_C$IncrPSI_rMats,tablaContraste_I$IncrPSI_rMats,tablaContraste_O$IncrPSI_rMats)),   # Segunda columna (valores de y)
gtf = as.factor(c(rep("original",nrow(tablaContraste_C)),rep("incomplete",nrow(tablaContraste_I)),rep("overload",nrow(tablaContraste_O))))  # Tercera columna (categoría)
)
df <- df[sample(nrow(df),nrow(df),replace = F),]
df[which(sign(df$x)!=0 &(sign(df$x)!=sign(df$y))),]$y <- -df[which(sign(df$x)!=0 &(sign(df$x)!=sign(df$y))),]$y
color_palette <- c("original" = "#009E73", "incomplete" = "#E69F00", "overload" = "#0072B2")
text_df <- data.frame(
x = c(-0.8, -0.8, -0.8),
y = c(0.8, 0.7, 0.6),
label = c(paste("Nº events (original):", length(unique(tablaContraste_C$ID))),
paste("Nº events (incomplete):", length(unique(tablaContraste_I$ID))),
paste("Nº events (overload):", length(unique(tablaContraste_O$ID))))
)
p_rMATS_DPSI <- ggplot(df,aes(x = x, y = y, color = gtf))+
geom_jitter(aes(fill=gtf),pch=21,color="black", size=3.5, alpha=1,height = 0.015,width = 0.015) +
geom_smooth(aes(group=gtf,color = gtf, fill=gtf),span=1, alpha=0.2) +
labs(title = "", x = "SIRV ΔΨ", y = "rMATS ΔΨ", color = "gtf annotation",fill = "gtf annotation") +
geom_abline(slope = 1, intercept = 0, color = "black") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
stat_cor(output.type = "text",cor.coef.name = c("rho"),label.x.npc = 0.3,label.y.npc ="bottom" ,method="pearson",
size = 4.5, fontface = "bold",aes(label = paste0("ρ = ", ..r.., ", p-value = ", ..p..)))+
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
df$error <- df$y-df$x
meanError_C <- sqrt(sum(df[which(df$gtf=="original"),]$error^2)/nrow(df[which(df$gtf=="original"),]))
meanError_I <- sqrt(sum(df[which(df$gtf=="incomplete"),]$error^2)/nrow(df[which(df$gtf=="incomplete"),]))
meanError_O <- sqrt(sum(df[which(df$gtf=="overload"),]$error^2)/nrow(df[which(df$gtf=="overload"),]))
text_df <- data.frame(
x = c(-0.5, -0.5, -0.5),
y = c(0.8, 0.7, 0.6),
label = c(paste("Mean Error (C):", round(meanError_C, 3)),
paste("Mean Error (I):", round(meanError_I, 3)),
paste("Mean Error (O):", round(meanError_O, 3)))
)
p_rMATS_DPSI_error <- ggplot(df,aes(x = x, y = error, color = gtf))+
geom_jitter(aes(fill=gtf),pch=21,color="black", size=3.5, alpha=1,height = 0.01,width = 0.01) +
geom_smooth(aes(group=gtf,color = gtf, fill=gtf),span=.8, alpha=0.2) +
labs(title = "", x = "SIRV ΔΨ", y = "Estimation Error", color = "gtf annotation",fill = "gtf annotation") +
geom_abline(slope = 0, intercept = 0, color = "black") +
geom_abline(slope = 0, intercept = 0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_abline(slope = 0, intercept = -0.1, color = "#0072B2", linetype = "dotted", size = 1.5) +
geom_text(data = text_df, aes(x = x, y = y, label = label), color = color_palette, size = 4, hjust = 0,fontface = "bold") +
scale_color_manual(values = color_palette) +
scale_fill_manual(values = color_palette) +
xlim(-1,1)+
ylim(-1,1)+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(
fill = "white",
linewidth = 0.7,
colour = "black"
),legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(face = "bold", size = 10),
axis.text = element_text(face = "bold", size = 10),
axis.title.x = element_text(face = "bold", size = 11),
axis.title.y = element_text(face = "bold", size = 11),
legend.justification = c(0, 1),
legend.position = c(0, 1),
panel.grid.minor = element_blank()
)
# p_EPBAM_DPSI <- p_EPBAM_DPSI + theme(legend.position = "none")
p_EPST_DPSI <- p_EPST_DPSI + theme(legend.position = "none")
p_rMATS_DPSI <- p_rMATS_DPSI + theme(legend.position = "none")
p_EPBAM_DPSI_error <- p_EPBAM_DPSI_error + theme(legend.position = "none")
p_EPST_DPSI_error <- p_EPST_DPSI_error + theme(legend.position = "none")
p_rMATS_DPSI_error <- p_rMATS_DPSI_error + theme(legend.position = "none")
p_MAJIQ_DPSI <- p_MAJIQ_DPSI + theme(legend.position = "none")
p_MAJIQ_DPSI_error <- p_MAJIQ_DPSI_error + theme(legend.position = "none")
p_MAJIQ_DPSI <- p_MAJIQ_DPSI + theme(legend.position = "none")
p_MAJIQ_DPSI_error <- p_MAJIQ_DPSI_error + theme(legend.position = "none")
p_SUPPA_DPSI <- p_SUPPA_DPSI + theme(legend.position = "none")
p_SUPPA_DPSI_error <- p_SUPPA_DPSI_error + theme(legend.position = "none")
# empty_plot <- ggplot() + theme_void()
plot_grid(p_EPBAM_DPSI, p_EPST_DPSI,p_SUPPA_DPSI, p_rMATS_DPSI,p_MAJIQ_DPSI, p_EPBAM_DPSI_error, p_EPST_DPSI_error,p_SUPPA_DPSI_error, p_rMATS_DPSI_error,p_MAJIQ_DPSI_error, ncol = 5, align = 'hv')+legend
# empty_plot <- ggplot() + theme_void()
plot_grid(p_EPBAM_DPSI, p_EPST_DPSI,p_SUPPA_DPSI, p_rMATS_DPSI,p_MAJIQ_DPSI, p_EPBAM_DPSI_error, p_EPST_DPSI_error,p_SUPPA_DPSI_error, p_rMATS_DPSI_error,p_MAJIQ_DPSI_error, ncol = 5, align = 'hv')
